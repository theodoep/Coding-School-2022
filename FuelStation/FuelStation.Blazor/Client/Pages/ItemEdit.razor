@page "/itemlist/edit/{Id:guid?}"
@using FuelStation.Blazor.Shared
@using FuelStation.Model
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Item Edit</h3>
@if (ItemItem == null)
{
    <p>Loading ...</p>
}
else
{
    <div class="row">
            <div class="col-md-6">
            <label class="form-label">Code</label>
            <input class="form-control" @bind="@ItemItem.Code" />
        </div>
        <div class="col-md-6">
            <label class="form-label">Description</label>
            <input class="form-control" @bind="@ItemItem.Description" />
        </div>
        <div class="col-md-6">
            <label for="item-type">Type</label>
            <select name="item-type" class="form-select" @bind="ItemType">
                <option value="-1">Select Item Type</option>
                @foreach (var item in Enum.GetValues(typeof(ItemTypeEnum)))
                {
                    <option value="@((int)item)">@item.ToString()</option>
                }
            </select>
        </div>
        <div class="col-md-6">
            <label class="form-label">Price</label>
            <input class="form-control" @bind="@ItemItem.Price" />
        </div> 
        <div class="col-md-6">
            <label class="form-label">Cost</label>
            <input class="form-control" @bind="@ItemItem.Cost" />
        </div> 
    </div>
    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
}
@code {
    [Parameter] public Guid ID { get; set; }
    ItemEditViewModel ItemItem { get; set; }
    private int ItemType { get; set; } = -1;

    protected override async Task OnInitializedAsync()
    {
        ItemItem = await httpClient.GetFromJsonAsync<ItemEditViewModel>($"item1/{ID}");
    }

     protected async Task OnSave()
    {
        HttpResponseMessage response;
        if (ID == Guid.Empty)
        {
            response = await httpClient.PostAsJsonAsync("Item1", ItemItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("Item1", ItemItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("itemlist");
    }

    protected void OnCancel()
    {
        navigationManager.NavigateTo("itemlist");
    }

}
